@page "/delete-item/{id}"
@using Microsoft.AspNetCore.SignalR.Client
@using NTBIAsset.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
<h2>Delete Inventory</h2>
<hr />
<p>Are you sure you want to delete this item?</p>
<br />
<div class="col-4">
    <table class="table table-striped">
        <tr>
            <td>Code</td>
            <td>@stock.Fixed_Asset_Code</td>
        </tr>
        <tr>
            <td>Name</td>
            <td>@stock.Fixed_Asset_Name</td>
        </tr>
        <tr>
            <td>Barcode</td>
            <td>@stock.BarCode</td>
        </tr>
    </table>
    <div class="form-group">
        <input type="button" class="btn btn-danger btn-sm" value="Delete" @onclick="DeleteInv" />
        <input type="button" class="btn btn-secondary btn-sm" value="Cancel" @onclick="Cancel" />
    </div>
</div>
@code {

    Stock stock = new Stock();
    private HubConnection hubConnection;

    [Parameter]
    public string id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        stock = await Http.GetJsonAsync<Stock>("api/Stocks/" + id);

        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/StockHub"))
        .Build();

        await hubConnection.StartAsync();

    }

    private async Task DeleteInv()
    {
        await Http.DeleteAsync("api/Stocks/" + id);

        if (IsConnected) await SendMessage();
        NavigationManager.NavigateTo("Inventory");

    }

    void Cancel()
    {
        NavigationManager.NavigateTo("Inventory");
    }
    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }
    public bool IsConnected => hubConnection.State == HubConnectionState.Connected;

    Task SendMessage() => hubConnection.SendAsync("SendMessage");
}
